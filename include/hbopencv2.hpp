//
// hbopencv2 - Binding library for Harbour++/Harbour/xHarbour and OpenCV2
//
// Copyright (c) 2025 Marcos Antonio Gambeta <marcosgambeta AT outlook DOT com>
//

// macros for parameters
#define cv_par_IplImage(n) (IplImage *)hb_parptr(n)
#define cv_cpar_IplImage(n) (const IplImage *)hb_parptr(n)
#define cv_par_CvMat(n) (CvMat *)hb_parptr(n)
#define cv_cpar_CvMat(n) (const CvMat *)hb_parptr(n)
#define cv_par_CvArr(n) (CvArr *)hb_parptr(n)
#define cv_cpar_CvArr(n) (const CvArr *)hb_parptr(n)
#define cv_dpar_CvArr(n, def) HB_ISNIL(n) ? def : cv_par_CvArr(n)
#define cv_par_double(n) hb_parnd(n)
#define cv_dpar_double(n, def) HB_ISNIL(n) ? def : hb_parnd(n)
#define cv_par_float(n) (float)hb_parnd(n)
#define cv_par_int(n) hb_parni(n)
#define cv_dpar_int(n, def) HB_ISNIL(n) ? def : hb_parni(n)
#define cv_par_size_t(n) hb_parnl(n)
#define cv_par_CvMatND(n) (CvMatND *)hb_parptr(n)
#define cv_cpar_CvMatND(n) (const CvMatND *)hb_parptr(n)
#define cv_par_CvSparseMat(n) (CvSparseMat *)hb_parptr(n)
#define cv_cpar_CvSparseMat(n) (const CvSparseMat *)hb_parptr(n)
#define cv_par_CvSparseMatIterator(n) (CvSparseMatIterator *)hb_parptr(n)
//#define cv_cpar_CvSparseMatIterator(n) (const CvSparseMatIterator *)hb_parptr(n)
#define cv_par_CvNArrayIterator(n) (CvNArrayIterator *)hb_parptr(n)
//#define cv_cpar_CvNArrayIterator(n) (const CvNArrayIterator *)hb_parptr(n)
#define cv_par_voidptr(n) (void *)hb_parptr(n)
#define cv_cpar_voidptr(n) (const void *)hb_parptr(n)
#define cv_dpar_voidptr(n, def) HB_ISNIL(n) ? def : (void *)hb_parptr(n)
#define cv_par_CvSeq(n) (CvSeq *)hb_parptr(n)
#define cv_cpar_CvSeq(n) (const CvSeq *)hb_parptr(n)
#define cv_par_CvSet(n) (CvSet *)hb_parptr(n)
#define cv_cpar_CvSet(n) (const CvSet *)hb_parptr(n)
#define cv_par_CvSetElem(n) (CvSetElem *)hb_parptr(n)
#define cv_cpar_CvMemStorage(n) (const CvMemStorage *)hb_parptr(n)
#define cv_par_CvMemStorage(n) (CvMemStorage *)hb_parptr(n)
#define cv_dpar_CvMemStorage(n, def) HB_ISNIL(n) ? def : (CvMemStorage *)hb_parptr(n)
#define cv_par_CvMemStoragePos(n) (CvMemStoragePos *)hb_parptr(n)
#define cv_par_CvSeqWriter(n) (CvSeqWriter *)hb_parptr(n)
#define cv_cpar_CvFileNode(n) (const CvFileNode *)hb_parptr(n)
#define cv_par_CvFileStorage(n) (CvFileStorage *)hb_parptr(n)
#define cv_cpar_CvFileStorage(n) (const CvFileStorage *)hb_parptr(n)
#define cv_par_CvSeqReader(n) (CvSeqReader *)hb_parptr(n)
#define cv_par_CvFileNode(n) (CvFileNode *)hb_parptr(n)
#define cv_cpar_CvModuleInfo(n) (const CvModuleInfo *)hb_parptr(n)
#define cv_par_CvTreeNodeIterator(n) (CvTreeNodeIterator *)hb_parptr(n)
#define cv_par_CvVideoWriter(n) (CvVideoWriter *)hb_parptr(n)
#define cv_par_CvCapture(n) (CvCapture *)hb_parptr(n)

// macros for return
#define cv_ret_IplImage(x) hb_retptr(x)
#define cv_ret_CvMat(x) hb_retptr(x)
#define cv_ret_CvArr(x) hb_retptr(x)
#define cv_ret_double(x) hb_retnd(x)
#define cv_ret_float(x) hb_retnd(x)
#define cv_ret_int(x) hb_retni(x)
#define cv_ret_voidptr(x) hb_retptr(x)
#define cv_ret_CvMatND(x) hb_retptr(x)
#define cv_ret_CvSeq(x) hb_retptr(x)
#define cv_ret_CvSparseMat(x) hb_retptr(x)
#define cv_ret_CvSparseNode(x) hb_retptr(x)
#define cv_ret_CvMemStorage(x) hb_retptr(x)
#define cv_ret_CvSet(x) hb_retptr(x)
#define cv_ret_CvSetElem(x) hb_retptr(x)
#define cv_ret_CvGraph(x) hb_retptr(x)
#define cv_ret_CvGraphEdge(x) hb_retptr(x)
#define cv_ret_CvGraphScanner(x) hb_retptr(x)
#define cv_ret_CvFileStorage(x) hb_retptr(x)
#define cv_ret_CvStringHashNode(x) hb_retptr(x)
#define cv_ret_CvTypeInfo(x) hb_retptr(x)
#define cv_ret_CvFileNode(x) hb_retptr(x)
#define cv_ret_CvVideoWriter(x) hb_retptr(x)
#define cv_ret_CvCapture(x) hb_retptr(x)
